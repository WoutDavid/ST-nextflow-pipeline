profiles {
    private_pc {
        params {
            //These are supposed to be changed
            dataDir = "/media/david/Puzzles/starfish_test_data/ExampleInSituSequencing"
            outDir="/home/david/Documents/communISS/results"
            codebook = "/media/david/Puzzles/starfish_test_data/ExampleInSituSequencing/codebook_wrong.csv"
            image_processing_dir = "/home/david/Documents/communISS/image_processing"


            //These should be the same for every implementation
            reference = "${dataDir}/DO/REF.TIF"
            transform_path = "${image_processing_dir}/registration/calculateTransform.py"
            register_path = "${image_processing_dir}/registration/rigidRegister.py"
            tiling_path = "${image_processing_dir}/tiling_nextflow.py"
            filtering_path= "${image_processing_dir}/filtering.py"
            spot_detection_path= "${image_processing_dir}/spotDetection.py"
            gather_intensity_path= "${image_processing_dir}/gatherIntensities.py"
            calculateOptimalTileSize_path="${image_processing_dir}/calculateOptimalTileSize.py"
            getMaxIntensity_path="${image_processing_dir}/getMaxIntensity.py"
            decoding_path="${image_processing_dir}/decoding.py"

            //Parameters: Should also remain the same
            target_x_reso=500
            target_y_reso=500
            filter_radius=15
            min_sigma = 1
            max_sigma = 10
        }
    }
    work_pc {
        params {
            //These are supposed to be changed
            dataDir = "/media/tool/starfish_test_data/ExampleInSituSequencing"
            outDir="/home/nacho/Documents/Code/communISS/results"
            codebook = "/media/tool/starfish_test_data/ExampleInSituSequencing/codebook.csv"
            image_processing_dir = "/home/nacho/Documents/Code/communISS/image_processing"

            //These should be the same for every implementation
            reference = "${dataDir}/DO/REF.TIF"
            transform_path = "${image_processing_dir}/registration/calculateTransform.py"
            register_path = "${image_processing_dir}/registration/rigidRegister.py"
            tiling_path = "${image_processing_dir}/tiling_nextflow.py"
            filtering_path= "${image_processing_dir}/filtering.py"
            spot_detection_path= "${image_processing_dir}/spotDetection.py"
            gather_intensity_path= "${image_processing_dir}/gatherIntensities.py"
            calculateOptimalTileSize_path="${image_processing_dir}/calculateOptimalTileSize.py"
            getMaxIntensity_path="${image_processing_dir}/getMaxIntensity.py"
            decoding_path="${image_processing_dir}/decoding.py"
            
            //Parameters: Should also remain the same
            target_x_reso=500
            target_y_reso=500
            filter_radius=15
            min_sigma = 1
            max_sigma = 10
        }
    }

}
    


